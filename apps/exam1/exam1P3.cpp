//
// File:    exam1P3.cpp
// Author: Kaylee Hurst  
// Purpose: given two strings,  plaintext & keytext,  will return a new string 
// containing the ciphertext generated by this algorithm for the plaintext
//

#include <algorithm>
#include <iostream>
#include <string>
#include <iterator>
#include <vector> 

//function prototype
std::string ciphertextGenerator (std::string, std::string);

int main ()
{
    std::string plaintext = "WEATTACKATDAWNVICTORYISOURS";
    std::string keytext = "LEMON";
    std::cout << ciphertextGenerator(plaintext, keytext) << std::endl;

    return 0;
}

std::string ciphertextGenerator (std::string plaintext, std::string keytext)
{
    std::string ciphertext = "";
    std::string nk = "";
    std::vector<char> cipher;
    for (auto count = 0; count < plaintext.length(); count++)
    {
        nk += keytext[count];
    }

    for (auto count = 0; count < plaintext.length(); count++)
    {
        cipher[count] = ((plaintext[count] + nk[count % plaintext.length()]) % (26 + 'A'));
    }
    
    for (std::vector<char>::iterator it = cipher.begin(); it != cipher.end(); ++it)
    {
        ciphertext += cipher[it];
    }
    
    return ciphertext;
}